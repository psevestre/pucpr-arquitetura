package br.pucpr.examples.inventory.orders.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrderCustomerAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderCustomerAllPropertiesEquals(OrderCustomer expected, OrderCustomer actual) {
        assertOrderCustomerAutoGeneratedPropertiesEquals(expected, actual);
        assertOrderCustomerAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderCustomerAllUpdatablePropertiesEquals(OrderCustomer expected, OrderCustomer actual) {
        assertOrderCustomerUpdatableFieldsEquals(expected, actual);
        assertOrderCustomerUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderCustomerAutoGeneratedPropertiesEquals(OrderCustomer expected, OrderCustomer actual) {
        assertThat(actual)
            .as("Verify OrderCustomer auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderCustomerUpdatableFieldsEquals(OrderCustomer expected, OrderCustomer actual) {
        assertThat(actual)
            .as("Verify OrderCustomer relevant properties")
            .satisfies(a -> assertThat(a.getCustomerId()).as("check customerId").isEqualTo(expected.getCustomerId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getEmail()).as("check email").isEqualTo(expected.getEmail()))
            .satisfies(a -> assertThat(a.getAddressLine1()).as("check addressLine1").isEqualTo(expected.getAddressLine1()))
            .satisfies(a -> assertThat(a.getAddressLine2()).as("check addressLine2").isEqualTo(expected.getAddressLine2()))
            .satisfies(a -> assertThat(a.getZipCode()).as("check zipCode").isEqualTo(expected.getZipCode()))
            .satisfies(a -> assertThat(a.getCity()).as("check city").isEqualTo(expected.getCity()))
            .satisfies(a -> assertThat(a.getCountry()).as("check country").isEqualTo(expected.getCountry()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderCustomerUpdatableRelationshipsEquals(OrderCustomer expected, OrderCustomer actual) {
        // empty method
    }
}
